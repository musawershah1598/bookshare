use Carbon\Carbon;
$users = User::select('id', 'created_at')
->get()
->groupBy(function($date) {
        return Carbon::parse($date->created_at)->format('m'); });

$usermcount = [];
$userArr = [];

foreach ($users as $key => $value) {
    $usermcount[(int)$key] = count($value);
}

for($i = 1; $i <= 12; $i++){
    if(!empty($usermcount[$i])){
        $userArr[$i] = $usermcount[$i];    
    }else{
        $userArr[$i] = 0;    
    }
}

$userArr;
use Carbon\Carbon;
$users = User::select('id', 'created_at')
->get()
->groupBy(function($date) {
        return Carbon::parse($date->created_at)->format('m'); });

$usermcount = [];
$userArr = [];

foreach ($users as $key => $value) {
    $usermcount[(int)$key] = count($value);
}

for($i = 1; $i <= 12; $i++){
    if(!empty($usermcount[$i])){
        $userArr[$i] = $usermcount[$i];    
    }else{
        $userArr[$i] = 0;    
    }
}

array_values($userArr);
use Carbon\Carbon;
$users = Book::select('id', 'created_at')
->get()
->groupBy(function($date) {
        return Carbon::parse($date->created_at)->format('m'); });

$usermcount = [];
$userArr = [];

foreach ($users as $key => $value) {
    $usermcount[(int)$key] = count($value);
}

for($i = 1; $i <= 12; $i++){
    if(!empty($usermcount[$i])){
        $userArr[$i] = $usermcount[$i];    
    }else{
        $userArr[$i] = 0;    
    }
}

array_values($userArr);
$user = User::all();
$user = User::all()->take(1);
$user = User::all()->take(2);
$user = User::all()->take(5);
$user = User::orderBy('created_at')->take(5);
$user = User::orderBy('created_at')->take(5)->get();
$user = User::orderBy('created_at','DESC')->take(5)->get();
